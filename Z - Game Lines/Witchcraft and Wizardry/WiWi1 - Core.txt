/* 

Witchcraft & Wizardry
(Harry Potter America)

A code re-skin for Boo & Spice

http://wiwimush.wikidot.com
(game not open at this time)



================================================================================
== NOTES =======================================================================

Start with the core GMC/CoD code and apply the following changes. 

By this time all the &d.<object> dbrefs should be on your person. Don't skip 
anything.



================================================================================
== GENERAL CHANGES =============================================================


--------------------------------------------------------------------------------
-- General: Functions ----------------------------------------------------------
*/

// 'median()' isn't already in TinyMUX.
// (we don't need the full function, but other games may)

&.median [v( d.dd )]=
	localize( strcat( 
		setq( n, sort( %0, n, %1, %b )), 
		setq( m, fdiv( words( %qn ), 2 )), 
		case( 1, 
			not( land( iter( %qn, isnum( %i0 )))), 
			#-1 All inputs must be numeric,

			isint( %qm ), 
			fdiv( ladd( elements( %qn, cat( %qm, inc( %qm )))), 2 ), 

			elements( %qn, ceil( %qm ))
		)
	))

think u( v( d.dd )/.median, 1 4 3 ) --> 3
think u( v( d.dd )/.median, 10.1.4.3, . ) --> 3.5
think u( v( d.dd )/.median, 10.1.Bob.4.3, . ) --> #1



/*
################################################################################
## DATA DICTIONARY #############################################################

These are changes to the stat system from the generic game install. Some of 
these items touch more than the Data Dictionary, but are stat-focused.

--------------------------------------------------------------------------------
-- General: Bio ----------------------------------------------------------------
*/


// ** Bio: Birthday Math **

&bio.birthdate [v( d.dd )]=*

&prerequisite.bio.birthdate [v( d.dd )]=
	cand( 
		convtime( cat( 
			xxx, 
			elements( %2, 1 ), 
			elements( %2, 2 ), 
			00:00:00, 
			elements( %2, 3 )
		)), 
		not( strlen( elements( %2, 4 )))
	)

&prereq-text.bio.birthdate [v( d.dd )]=
	Must be in format 'Mon DD YYYY'. 
	(Month three-letter text. Day numeric. Year four-digit numeric.)


// b: _bio.birthdate 
// t: timestamp format for birthdate midnight :: xxx <Mon> <DD> 00:00:00 <YYYY>
// a: age in years

&bio.age [v( d.dd )]=
	localize( strcat( 
		setq( b, u( .value, %0, bio.birthdate )), 
		setq( t, cat( xxx, elements( %qb, 1 ), elements( %qb, 2 ), 00:00:00, elements( %qb, 3 ))), 
		setr( a, first( writetime( sub( secs(), convtime( %qt ))))), 
// add <age category> here
		/, 
		switch( %qa, 
			>17, Adult,
			>13, Teen, 
			>0, Child, 
			Invalid 
		)
	))
&default.bio.age [v( d.dd )]=derived
&tags.bio.age [v( d.dt )]=derived

&bio.grade [v( d.dd )]=6.7.8.9.10.11.12.Alumnus
&class.bio.grade [v( d.dd )]=string





/*
--------------------------------------------------------------------------------
-- General: Attributes ---------------------------------------------------------

There is no 'power level stat' rule, but I'm leaving the code in place to 
determine if anyone can take an Attribute or Skill above 10. Among other things, 
there may be future plans to allow permanent Attributes or Skills above 5; 
leaving this code in will make that easier.

However, the language needs changed.

*/

@edit v( d.dd )/prereq-text.attribute.*=
	Limited by power level stat, 
	6+ may be set by staff only

@edit v( d.dd )/prereq-text.skill.*=
	Limited by power level stat, 
	6+ may be set by staff only


/*
--------------------------------------------------------------------------------
-- General: Skills -------------------------------------------------------------

http://wiwimush.wikidot.com/skills

*/

&skill.occult [v( d.dd )]=
&prerequisite.skill.occult [v( d.dd )]=
&prereq-text.skill.occult [v( d.dd )]=
&tags.skill.occult [v( d.dd )]=

&skill.gramarye [v( d.dd )]=1.2.3.4.5.6.7.8.9.10|*
&prerequisite.skill.gramarye [v( d.dd )]=
	u( .trait_check, %0, skill.gramarye, %2 )
&prereq-text.skill.gramarye [v( d.dd )]=6+ may be set by staff only
&tags.skill.gramarye [v( d.dd )]=mental

&skill.ride [v( d.dd )]=1.2.3.4.5.6.7.8.9.10|*
&prerequisite.skill.ride [v( d.dd )]=
	u( .trait_check, %0, skill.ride, %2 )
&prereq-text.skill.ride [v( d.dd )]=6+ may be set by staff only
&tags.skill.ride [v( d.dd )]=physical



/*
--------------------------------------------------------------------------------
-- General: Merits -------------------------------------------------------------

http://wiwimush.wikidot.com/merits

ON STAND-BY UNTIL "CHRONICLES OF DARKNESS" REVIEW IS COMPLETE.




================================================================================
== HUMAN -> BLIG ===============================================================

'Blig' means 'Blissfully Ignorant', but replaces the Human tag in all locations.

*/

// data dictionary
&.sphere.human [v( d.dd )]=
&.sphere.blig [v( d.dd )]=Blig
&bio.template [v( d.dd )]=Blig

// data tags (spammy)
@edit v( d.dt )/*=human, blig

// chargen (should've been 'default', beh.)
@edit v( d.cg )/f.pts-valid?.integrity=human, blig



/*
================================================================================
== WIZARDS =====================================================================

--------------------------------------------------------------------------------
-- Wizard: Bio -----------------------------------------------------------------

http://wiwimush.wikidot.com/advantages#toc1

*/

@fo me=&bio.template [v( d.dd )]=[get( v( d.dd )/bio.template )].Wizard

&bio.paradigm [v( d.dd )]=Sorcery.Arendi
&tags.bio.paradigm [v( d.dt )]=wizard


/*
--------------------------------------------------------------------------------
-- Wizard: Search Order --------------------------------------------------------

Level 2 for powers 
Level 3 for very minor items
*/

&d.search-order-02-wizard [v( d.sfp )]=art aptitude
&d.search-order-03-wizard [v( d.sfp )]=


/*
--------------------------------------------------------------------------------
-- Wizard: Aptitudes -----------------------------------------------------------
*/

&aptitude.potency [v( d.dd )]=
	u( .median, 
		iter( 
			intelligence strength presence, 
			ladd( get( %0/_attribute.%i0 ), . )
		)
	)
&default.aptitude.potency [v( d.dd )]=derived
&tags.aptitude.potency [v( d.dt )]=derived.wizard

&aptitude.precision [v( d.dd )]=
	u( .median, 
		iter( 
			wits dexterity manipulation, 
			ladd( get( %0/_attribute.%i0 ), . )
		)
	)
&default.aptitude.precision [v( d.dd )]=derived
&tags.aptitude.precision [v( d.dt )]=derived.wizard

&aptitude.protection [v( d.dd )]=
	u( .median, 
		iter( 
			resolve stamina composure, 
			ladd( get( %0/_attribute.%i0 ), . )
		)
	)
&default.aptitude.protection [v( d.dd )]=derived
&tags.aptitude.protection [v( d.dt )]=derived.wizard


/*
--------------------------------------------------------------------------------
-- Wizard: Advantages ----------------------------------------------------------

http://wiwimush.wikidot.com/advantages

*/

@edit [v( d.dt )]/tags.advantage.integrity=$, .wizard

&advantage.sortilege [v( d.dd )]=1.2.3.4.5.6.7.8.9.10
&default.advantage.sortilege [v( d.dd )]=1
&tags.advantage.sortilege [v( d.dd )]=wizard

// bio.paradigm is to be displayed as a sub-type of sortilege

&advantage.darkness [v( d.dd )]=
	ladd( u( .value_full, %0, advantage.darkness_maximum ), . )
&default.advantage.darkness [v( d.dd )]=derived
&tags.advantage.darkness [v( d.dt )]=pool.derived.wizard

&advantage.darkness_maximum [v( d.dd )]=0.1.2.3.4.5.6.7.8.9.10
&default.advantage.darkness_maximum [v( d.dd )]=0
&tags.advantage.darkness_maximum [v( d.dt )]=pool.derived.wizard


/*
--------------------------------------------------------------------------------
-- Wizard: Arts ----------------------------------------------------------------

http://wiwimush.wikidot.com/advantages#toc4

*/

&art.charms [v( d.dd )]=1.2.3.4.5
&prerequisite.art.charms [v( d.dd )]=
	u( .at_most_stat, %0, art.charms, advantage.sortilege, %2 )
&prereq-text.art.charms [v( d.dd )]=May not be higher than Sortilege
&tags.art.charms [v( d.dt )]=wizard

&art.glamers [v( d.dd )]=1.2.3.4.5
&prerequisite.art.glamers [v( d.dd )]=
	u( .at_most_stat, %0, art.glamers, advantage.sortilege, %2 )
&prereq-text.art.glamers [v( d.dd )]=May not be higher than Sortilege
&tags.art.glamers [v( d.dt )]=wizard

&art.transfiguration [v( d.dd )]=1.2.3.4.5
&prerequisite.art.transfiguration [v( d.dd )]=
	u( .at_most_stat, %0, art.transfiguration, advantage.sortilege, %2 )
&prereq-text.art.transfiguration [v( d.dd )]=May not be higher than Sortilege
&tags.art.transfiguration [v( d.dt )]=wizard

&art.conjuration [v( d.dd )]=1.2.3.4.5
&prerequisite.art.conjuration [v( d.dd )]=
	u( .at_most_stat, %0, art.conjuration, advantage.sortilege, %2 )
&prereq-text.art.conjuration [v( d.dd )]=May not be higher than Sortilege
&tags.art.conjuration [v( d.dt )]=wizard

&art.potions [v( d.dd )]=1.2.3.4.5
&prerequisite.art.potions [v( d.dd )]=
	u( .at_most_stat, %0, art.potions, advantage.sortilege, %2 )
&prereq-text.art.potions [v( d.dd )]=May not be higher than Sortilege
&tags.art.potions [v( d.dt )]=wizard

&art.runes [v( d.dd )]=1.2.3.4.5
&prerequisite.art.runes [v( d.dd )]=
	u( .at_most_stat, %0, art.runes, advantage.sortilege, %2 )
&prereq-text.art.runes [v( d.dd )]=May not be higher than Sortilege
&tags.art.runes [v( d.dt )]=wizard


/*
--------------------------------------------------------------------------------
-- Wizard: Sheet ---------------------------------------------------------------

http://wiwimush.wdfiles.com/local--files/start/Character%20Sheet_Witchcraft%20%26%20Wizardry_v2.pdf

*/

// << to-do >>


/* 
--------------------------------------------------------------------------------
-- Wizard: Chargen -------------------------------------------------------------
*/

// << to-do >>




















/*
################################################################################
## CHARACTER SHEET #############################################################

Changes for the showing of the sheet for Wizards.



================================================================================
== Sheet: General ==============================================================

The staff wants sheets to be open, so we remove the 'staff only' check 
from &c.sheet.

*/

@edit v( d.nsc )/c.sheet={ 
		@assert cor( u( .isstaff, %# ), not( %qt ), strmatch( %qp, %# ))=
			{ @pemit %#=Staff only. }; 
	}, 

// Default mental and physical skill lists changed.
// (This could be done with code, tag 'mental' of type 'skill', etc.)

&skills.mental.default [v( d.nsc )]=
	iter( 
		academics computer crafts gramayre investigation medicine politics 
		science, 
		u( f.cheat_getstat.skill-n-specs, %0, %i0 ), , | 
	)

&skills.physical.default [v( d.nsc )]=
	iter( 
		athletics brawl drive firearms larceny ride stealth survival weaponry, 
		u( f.cheat_getstat.skill-n-specs, %0, %i0 ), , | 
	)



/*
================================================================================
== Sheet: Wizard ===============================================================

00000000011111111112222222222333333333344444444445555555555666666666677777777778
12345678901234567890123456789012345678901234567890123456789012345678901234567890

<-------------< Aptitudes >-------------> <-------------< Arts >-------------->
 Potency (Power) ..................... 2  Charms ........................... 1
 Precision (Finesse) ................. 2  Conjuration ...................... -
 Protection (Resistance) ............. 4  Glamers .......................... 2
                                          Potions .......................... -
                                          Runes ............................ -
                                          Transfiguration .................. 2

                                          0000000001111111111222222222233333333
                                          1234567890123456789012345678901234567

So:
	Aptitudes: w:41, t:39
	Arts: w:37, t:35

*/


// -- Bio ----------------------------------------------------------------------

// &bio.default.wizard [v( d.nsc )]=@@( nothing; get rid of Full Name too )


// -- Powers -------------------------------------------------------------------

&powers.aptitudes [v( d.nsc )]=
	iter( sort( edit( lattr( v( d.dd )/aptitude.* ), APTITUDE., )), 
		ulocal( f.cheat_getstat.with_name, %0, aptitude.%i0, numeric ), 
		, | 
	)

&powers.arts [v( d.nsc )]=
	iter( sort( edit( lattr( v( d.dd )/art.* ), ART., )), 
		ulocal( f.cheat_getstat.with_name, %0, art.%i0, numeric ), 
		, | 
	)

&block.powers.arts [v( d.sheet )]=
  strcat( 
		setq( w, 41 ), setq( t, 37 ), 
		setq( 1, 
			strcat( 
				divider( Aptitudes, %qw ), |, 
				iter( u( powers.aptitudes, %0 ), 
					ulocal( display.trait-and-value, 
						%i0, %qt, %qw, numeric, . 
					), 
					|, | 
				)
			)
		), 

		setq( w, 37 ), setq( t, 33 ), 
		setq( 2, 
			strcat( 
				divider( Arts, %qw ), |, 
				iter( u( powers.arts, %0 ), 
					ulocal( display.trait-and-value, 
						%i0, %qt, %qw, numeric, . 
					), 
					|, | 
				)
			)
		), 

		vcolumns( 38:%q2, 41:%q1, | ), %r 
	)

// And this is all we need to activate it for the Wizard template:

&block.powers.wizard [v( d.sheet )]=u( block.powers.arts, %0, %1 )
























// -- Advantages ---------------------------------------------------------------

&block.traits.wizard [v( d.sheet )]=
	strcat( 
		setq( w, 38 ), setq( t, 10 ), 
		setq( r, @@( ... )), 
		setq( z, 
			u( display.trait-and-value, 
				strcat( 
					setq( z, u( traits.supernatural_resistance, %0 )), 
					setq( y, 
						strcat( 
							first( %qz, : ), %b, 
							%(, get( %0/_bio.paradigm ), %) 
						)
					), 
					%qy, :, 
					rest( %qz, : )
				), 
				inc( strlen( %qy )), 
				%qw, 
				numeric 
			)
		), 
		vcolumns( %qw:%qr, %qw:%qz, |, %b ), %r, 
	)


/* 
********************************************************************************
** SOME CHARGEN NOTES **********************************************************

added the concept of 'mandatory' general bio checks
*/

&check.bio [v( d.cg )]=
	strcat( 
// column 1
		setq( 1, 
			strcat( 
				ansi( h, Gender ), :, %b, 
				setr( g, get( %0/sex )), %b, 
				u( display.check.ok-no, match( f m, strtrunc( %qg, 1 ))), `, 
				ansi( h, Concept ), :, %b, 
				if( hasattr( %0, _bio.concept ), 
					ansi( g, exists ), 
					ansi( r, blank )
				), `, 
				iter( v( check.bio.mandatory ), 
					strcat( 
						ansi( h, titlestr( edit( %i0, _, %b ))), :, %b, 
						setr( i, u( %1/_bio.%i0 )), %b, 
						u( display.check.ok-no, comp( %qi, ))
					), 
					, ` 
				)
			)
		), 
// column 2
		setq( 2, 
			iter( 
				cat( 
					template, 
					udefault( check.bio.%2, u( check.bio.default ), %1 )
				), 
				strcat( 
					ansi( h, titlestr( edit( %i0, _, %b ))), :, %b, 
					setr( i, u( %1/_bio.%i0 )), %b, 
					u( display.check.ok-no, comp( %qi, ))
				), 
				, ` 
			)
		), 
// display
		divider( Biography Check, width( %# )), 
		%r, 
		vcolumns( 38:%q1, 37:%q2, `, %b, %b%b )
	)


&check.bio.manditory [v( d.cg )]=birthdate
&check.bio.default [v( d.cg )]=first_name last_name
&check.bio.wizard [v( d.cg )]=first_name last_name paradigm 

&f.allocated.power-trait.wizard [v( d.cg )]=
	mul( dec( first( get( %0/_advantage.sortilege ), . )), 5 )

&check.chargen.wizard [v( d.cg )]=u( check.arts, %0, wizard )

&check.arts [v( d.cg )]=
	udefault( 
		check.arts.[get( %0/_bio.template )], 
		** check failed **, 
		%0 
	) 

&check.arts.wizard [v( d.cg )]=
	localize( strcat( 
		%b%b, ansi( h, Arts ), :, %b, 
		setr( a, u( f.allocated.arts, %0 )), /5, %b, 
		u( display.check.ok-no, eq( %qa, 5 )), 
		%r 
	))













/*
--------------------------------------------------------------------------------
-- Check Chargen ---------------------------------------------------------------

Merits: 5/10 (5 on <name of Power Stat>)

0: dbref of sheet
1: template

a: age
c: age chart (<skill points>:<specialties>)

*/

&f.valid-points.skill.default [v( d.cg )]=
	switch( %0, 
		<11, 0/0/0:0, 
		11, 6/4/2:1, 
		12, 7/4/2:1, 
		13, 7/4/3:1, 
		14, 8/4/3:2, 
		15, 8/5/3:2, 
		16, 9/5/3:2, 
		17, 10/6/4:2, 
		11/7/4:3 
	)

&f.valid-points.skill.vampire [v( d.cg )]=11/7/4:3
&f.valid-points.skill.giant [v( d.cg )]=11/7/4:3


&check.chargen [v( d.cg )]=
	strcat( 
		setq( a, first( u( v( d.dd )/.value, %0, bio.age ), / )), 
		setq( t, get( %0/_bio.template )), 
		setq( c, 
			udefault( f.valid-points.skill.%qt, 
				u( f.valid-points.skill.default, %qa ), 
				%qa
			)
		), 

		divider( Chargen Levels, width( %# )), %r, 

		%b%b, ansi( h, Attributes ), :%b, 
		udefault( 
			check.chargen.attributes.%1, 
			u( check.chargen.attributes.default, %0 ), 
			%0 
		), 

		ulocal( check.chargen.attributes, %0, %1 ), %r, 

		%b%b, ansi( h, Skills ), :%b, 
		udefault( 
			check.chargen.skills.%1, 
			u( check.chargen.skills.default, %0, first( %qc, : )), 
			%0, 
			first( %qc, : )
		), %r, 
		ulocal( check.chargen.specialties, %0, %1, rest( %qc, : )), %r, 

		%b%b, ansi( h, Merits ), :%b, 
			setq( a, u( f.allocated.merits, %0 )), 
			ladd( %qa, / ), /10, 
			%b, %(, rest( %qa, / ), %b, from Power Stat, %), %b, 
			u( display.check.stats, %0, merits ), %r, 

// .. template chargen checks
		u( check.chargen.%1, %0 )
	)


/*
--------------------------------------------------------------------------------
-- Check Chargen: Skills -------------------------------------------------------

0: sheet dbref
1: valid skill points for age (low/med/high)

*/

&check.chargen.skills.default [v( d.cg )]=
	strcat( 
		u( f.allocated.skills, %0 ), %b, %(of %1%), %b, 
		u( display.check.stats, %0, skills, , %1 )
	)


/*
--------------------------------------------------------------------------------
-- Display: Check Stats --------------------------------------------------------

0: dbref of sheet
1: category to check
2: potential late additions/subtractions ('free' points being accounted for)
3: valid points for age
output: Ob. yes/no in full prismatic color

*/

&display.check.stats [v( d.cg )]=
	u( display.check.ok-no, u( f.pts-valid?.%1, %0, %2, %3 ))


/*
--------------------------------------------------------------------------------
-- Pts Valid?: Skills ----------------------------------------------------------

Check for: 4/7/11 points
0: dbref of sheet
1: possible late additions/subtractions (for 'free point' checks)
2: valid skill points per category (high/med/low)

s: skills

*/

&f.pts-valid?.skills [v( d.cg )]=
	strcat( 
		setq( s, sort( u( f.allocated.skills, %0, %1 ), n, / )), 
		land( 
			iter( 
				sort( %2, n, / ), 
				strmatch( %i0, elements( %qs, inum(), / )), 
				/ 
			)
		)
/*
		and(
			eq( first( %qs, / ), 4 ), 
			eq( elements( %qs, 2, / ), 7 ), 
			eq( last( %qs, / ), 11 )
		)
*/
	)


/*
--------------------------------------------------------------------------------
-- Check Chargen: Specialties --------------------------------------------------

0: sheet dbref
1: template
2: number of valid specialties for age 

a: all specialties
s: standard specialties
r: template-specific specialties

*/

&check.chargen.specialties [v( d.cg )]=
	strcat(
		setq( a, ulocal( f.allocated.specialties, %0 )), 
		setq( s, first( %qa, ` )), 
		setq( r, rest( %qa, ` )), 

		%b%b, ansi( h, Specialties ), :%b, 
		iter( 
			%qs, 
			ulocal( u( d.sfp )/f.statname.workhorse, rest( %i0, . )), 
			, %,%b
		), 

// check & output template specs
		ulocal( check.specialties.%1, %qr ), 

		%r%b%b, ansi( h,  Final Specialties Check ), %b, ->, %b, 
		words( %qs ), /%2, %b, 
		ulocal( display.check.stats, %0, specialties, %2 )

	)


/*
--------------------------------------------------------------------------------
-- Pts Valid?: Specialties -----------------------------------------------------

Check for specialties in a list of yes/no: 
<standard>`<template>`<specialty>`<sub-specialty>
<standard> need to be 3, otherwise check based on tempalte

0: dbref of sheet
1: number of valid specialties by age

s: specialties
t: template

&f.pts-valid?.specialties.<template> (if exists):
	input: <template>`<specialty>`<sub-specialty>
	output: 1 1 1 (a stream of 1 or 0 responses if it's valid)

*/

&f.pts-valid?.specialties [v( d.cg )]=
	strcat(
		setq( s, u( f.allocated.specialties, %0 )), 
		setq( t, u( %0/_bio.template )), 
		land( 
			[eq( words( first( %qs, ` )), %1 )] 
			[udefault( f.pts-valid?.specialties.%qt, 1, rest( %qs, ` ))] 
		)
	)


/* 
================================================================================== TEMPLATE: Warn People =======================================================

Because people who have their template set are treated as Unapproved Characters, 
warn people of this. They can use 'stat/wipe' to become a Player again.

--

stat/template <template>[ YES]
stat/template <target>=<template>[ YES]

--

0: [Target=]Template[ YES]

q0: target ('%#' if target is missing and 'in chargen') 
q1: template
q2: YES if ' YES', else null.

qp: pmatch
qw: where is the sheet location
qv: validated template(s)
ql: list of stats to set
qs: setting self? (1/0)

*/

&f.stat/template [v( d.ss )]=
	strcat( 
// .. registers
		if( strmatch( %0, *=* ), 
			setq( 0, before( %0, = )), 
			setq( 0, %# )
		), 
		if( strmatch( %0, *=* ), 
			setq( 1, after( %0, = )), 
			setq( 1, %0 )
		), 
		if( regmatch( %q1, ^(.+)( YES)$, 2 2 3 ), 
			[setq( 1, %q2 )][setq( 2, YES )] 
		), 

		if( strmatch( %q0, me ), setq( 0, %# )),
		setq( p, u( .pmatch, %q0 )), 
		setq( w, u( f.find-sheet, %qp )), 
		setq( s, strmatch( %#, %qp )), 
		setq( v, statvalidate( template, %q1 )), 

		case( 0, 

// .. staff can set anything
// .. players can only /template themselves, and only if they're 'in chargen'
			cor( 
				isstaff( %# ), 
				cand( %qs, isapproved( %#, chargen ))
			), 
			u( .msg, stat/template, Staff only ), 

// .. template already exists 
			not( hasattr( %qw, _bio.template )), 

			if( t( %qs ), 
				u( .msg, stat/template, 
					You already have a template. 
					'stat/wipe' to erase your stats.
				), 
				u( .msg, stat/template, 
					Player already has a template. 
					'stat/wipe %q0' to erase their stats. 
				)
			), 

// .. check for ' YES'
			strmatch( %q2, YES ), 
			if( t( %qs ), 
				u( .msg, stat/template, 
					If you set your template you will become a Character. 
					If you're sure%, type: 
					[ansi( h, stat/template %q1 YES )]
				), 
				u( .msg, stat/template, 
					If you set their template they will become a Character. 
					If you're sure%, type: 
					[ansi( h, stat/template %q0=%q1 YES )] 
				)
			), 

// .. template not found
			t( %qv ), 
			u( .msg, stat/template, 
				Template '%q1' could not be found; check 'stat template' 
			), 

// OK! Find all stat.paths to be set with this template
			strcat( 
				setq( l, u( f.statpaths-for-template, %qv )), 

// .. .. output what we're setting
				u( display.statpath_defaults, %qp, %qv, %ql ), 

// .. .. and set it
				null( set( %qw, _BIO.TEMPLATE:%qv )), 
				null( u( f.defaults.set, %qw, %ql )), 
			)
		)
	)


